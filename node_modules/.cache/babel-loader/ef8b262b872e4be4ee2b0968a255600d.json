{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sylvienguyen/Documents/Ynov/Serre connecte\\u0301e/serre-connectee/src/Components/Dasboard/Temperature.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000'\n    }\n  }\n});\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    maxWidth: 500,\n    color: theme.palette.primary.main\n  },\n  slider: {\n    marginTop: 40,\n    marginLeft: 15\n  }\n}));\nconst marks = [{\n  value: -20,\n  label: '-20°C'\n}, {\n  value: -10,\n  label: '-10°C'\n}, {\n  value: 0,\n  label: '0°C'\n}, {\n  value: 10,\n  label: '10°C'\n}, {\n  value: 20,\n  label: '20°C'\n}, {\n  value: 30,\n  label: '30°C'\n}, {\n  value: 40,\n  label: '40°C'\n}];\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nfunction Temperature(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    title,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      className: classes.slider,\n      min: -20,\n      max: 40,\n      defaultValue: value,\n      getAriaValueText: valuetext,\n      step: 10,\n      marks: marks,\n      valueLabelDisplay: \"on\" // disabled={true}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Temperature, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Temperature;\nexport default Temperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temperature\");","map":{"version":3,"sources":["/Users/sylvienguyen/Documents/Ynov/Serre connectée/serre-connectee/src/Components/Dasboard/Temperature.tsx"],"names":["React","makeStyles","createStyles","Typography","Slider","createMuiTheme","theme","palette","primary","light","main","dark","contrastText","secondary","useStyles","root","maxWidth","color","slider","marginTop","marginLeft","marks","value","label","valuetext","Temperature","props","classes","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAA4BC,YAA5B,QAAgD,0BAAhD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,MAAMC,KAAK,GAAGD,cAAc,CAAC;AAC3BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,IAAI,EAAE,SAFC;AAGPC,MAAAA,IAAI,EAAE,SAHC;AAIPC,MAAAA,YAAY,EAAE;AAJP,KADF;AAOPC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,KAAK,EAAE,SADE;AAETC,MAAAA,IAAI,EAAE,SAFG;AAGTC,MAAAA,IAAI,EAAE,SAHG;AAITC,MAAAA,YAAY,EAAE;AAJL;AAPJ;AADkB,CAAD,CAA5B;AAiBA,MAAME,SAAS,GAAGb,UAAU,CAAEK,KAAD,IAC3BJ,YAAY,CAAC;AACXa,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,GADR;AAEFC,IAAAA,KAAK,EAAEX,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBE;AAF3B,GADK;AAKXQ,EAAAA,MAAM,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,UAAU,EAAE;AAFR;AALG,CAAD,CADc,CAA5B;AAaA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,KAAK,EAAE,CAAC,EADZ;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADU,EAKV;AACID,EAAAA,KAAK,EAAE,CAAC,EADZ;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALU,EASV;AACID,EAAAA,KAAK,EAAE,CADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATU,EAaV;AACID,EAAAA,KAAK,EAAE,EADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAbU,EAiBV;AACID,EAAAA,KAAK,EAAE,EADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAjBU,EAqBV;AACID,EAAAA,KAAK,EAAE,EADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CArBU,EAyBV;AACID,EAAAA,KAAK,EAAE,EADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAzBU,CAAd;;AA+BA,SAASC,SAAT,CAAmBF,KAAnB,EAAkC;AAC9B,SAAQ,GAAEA,KAAM,IAAhB;AACH;;AAOD,SAASG,WAAT,CAAqBC,KAArB,EAA8C;AAAA;;AAC1C,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM;AAAEc,IAAAA,KAAF;AAASN,IAAAA;AAAT,MAAmBI,KAAzB;AACA,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACZ,IAAxB;AAAA,4BACI,QAAC,UAAD;AAAA,gBACKa;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AACI,MAAA,SAAS,EAAED,OAAO,CAACT,MADvB;AAEI,MAAA,GAAG,EAAE,CAAC,EAFV;AAGI,MAAA,GAAG,EAAE,EAHT;AAII,MAAA,YAAY,EAAEI,KAJlB;AAKI,MAAA,gBAAgB,EAAEE,SALtB;AAMI,MAAA,IAAI,EAAE,EANV;AAOI,MAAA,KAAK,EAAEH,KAPX;AAQI,MAAA,iBAAiB,EAAC,IARtB,CASI;;AATJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GArBQI,W;UACWX,S;;;KADXW,W;AAuBT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        maxWidth: 500,\n        color: theme.palette.primary.main\n    },\n    slider: {\n        marginTop: 40,\n        marginLeft: 15\n    },\n  }),\n);\n\nconst marks = [\n    {\n        value: -20,\n        label: '-20°C',\n    },\n    {\n        value: -10,\n        label: '-10°C',\n    },\n    {\n        value: 0,\n        label: '0°C',\n    },\n    {\n        value: 10,\n        label: '10°C',\n    },\n    {\n        value: 20,\n        label: '20°C',\n    },\n    {\n        value: 30,\n        label: '30°C',\n    },\n    {\n        value: 40,\n        label: '40°C',\n    },\n];\n\nfunction valuetext(value: number) {\n    return `${value}°C`;\n}\n\ninterface TemperatureProps {\n    title: string;\n    value: number;\n}\n\nfunction Temperature(props: TemperatureProps) {\n    const classes = useStyles();\n    const { title, value } = props;\n    return (\n        <div className={classes.root}>\n            <Typography>\n                {title}\n            </Typography>\n            <Slider\n                className={classes.slider}\n                min={-20}\n                max={40}\n                defaultValue={value}\n                getAriaValueText={valuetext}\n                step={10}\n                marks={marks}\n                valueLabelDisplay=\"on\"\n                // disabled={true}\n            />\n        </div>\n    );\n}\n\nexport default Temperature;\n"]},"metadata":{},"sourceType":"module"}