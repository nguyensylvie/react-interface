{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sylvienguyen/Desktop/serre-connectee/src/Components/Data/Charts/SplitButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nconst options = ['Jours', 'Semaines', 'Mois'];\n\nfunction SplitButton() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"left\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n        variant: \"contained\",\n        color: \"primary\",\n        ref: anchorRef,\n        \"aria-label\": \"split button\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          children: options[selectedIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"small\",\n          \"aria-controls\": open ? 'split-button-menu' : undefined,\n          \"aria-expanded\": open ? 'true' : undefined,\n          \"aria-label\": \"select merge strategy\",\n          \"aria-haspopup\": \"menu\",\n          onClick: handleToggle,\n          children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popper, {\n        open: open,\n        anchorEl: anchorRef.current,\n        role: undefined,\n        transition: true,\n        disablePortal: true,\n        children: ({\n          TransitionProps,\n          placement\n        }) => /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n          style: {\n            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                id: \"split-button-menu\",\n                children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  selected: index === selectedIndex,\n                  onClick: event => handleMenuItemClick(event, index),\n                  children: option\n                }, option, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SplitButton, \"iOJX1GbrjEJXdM49lHfo+/a1EuI=\");\n\n_c = SplitButton;\nexport default SplitButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitButton\");","map":{"version":3,"sources":["/Users/sylvienguyen/Desktop/serre-connectee/src/Components/Data/Charts/SplitButton.tsx"],"names":["React","Grid","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","options","SplitButton","open","setOpen","useState","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","undefined","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst options = ['Jours', 'Semaines', 'Mois'];\n\nfunction SplitButton() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"left\">\n      <Grid item xs={12}>\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            aria-controls={open ? 'split-button-menu' : undefined}\n            aria-expanded={open ? 'true' : undefined}\n            aria-label=\"select merge strategy\"\n            aria-haspopup=\"menu\"\n            onClick={handleToggle}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        </ButtonGroup>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList id=\"split-button-menu\">\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SplitButton;"]},"metadata":{},"sourceType":"module"}